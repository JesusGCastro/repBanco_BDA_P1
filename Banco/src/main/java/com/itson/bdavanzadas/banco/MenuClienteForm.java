package com.itson.bdavanzadas.banco;

import com.itson.bdavanzadas.bancodominio.Cliente;
import com.itson.bdavanzadas.bancodominio.Cuenta;
import com.itson.bdavanzadas.bancopersistencia.conexion.Conexion;
import com.itson.bdavanzadas.bancopersistencia.conexion.IConexion;
import com.itson.bdavanzadas.bancopersistencia.daos.ClientesDAO;
import com.itson.bdavanzadas.bancopersistencia.daos.CuentasDAO;
import com.itson.bdavanzadas.bancopersistencia.daos.IClientesDAO;
import com.itson.bdavanzadas.bancopersistencia.daos.ICuentasDAO;
import com.itson.bdavanzadas.bancopersistencia.excepciones.PersistenciaException;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;

public class MenuClienteForm extends javax.swing.JFrame {

    private final IClientesDAO clientesDAO;
    private final Cliente cliente;
    
    public MenuClienteForm(IClientesDAO clientesDAO, Cliente cliente) {
        initComponents();
        this.clientesDAO = clientesDAO;
        this.cliente = cliente;
        lblBienvenida.setText("Bienvenid@ "+cliente.getNombre_pila());
        mostrarCuentas();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bg = new javax.swing.JPanel();
        lblBienvenida = new javax.swing.JLabel();
        btnSalir = new javax.swing.JButton();
        btnNuevaCuenta = new javax.swing.JButton();
        btnTransferencia = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCuentas = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bg.setBackground(new java.awt.Color(255, 255, 255));
        bg.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblBienvenida.setBackground(new java.awt.Color(255, 223, 148));
        lblBienvenida.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        lblBienvenida.setText("Bienvenido a tu cuenta!");
        bg.add(lblBienvenida, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 30, -1, -1));

        btnSalir.setBackground(new java.awt.Color(255, 223, 148));
        btnSalir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(100, 100, 100));
        btnSalir.setText("Salir");
        btnSalir.setBorder(null);
        btnSalir.setBorderPainted(false);
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        bg.add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 10, 70, -1));

        btnNuevaCuenta.setBackground(new java.awt.Color(255, 223, 148));
        btnNuevaCuenta.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnNuevaCuenta.setForeground(new java.awt.Color(100, 100, 100));
        btnNuevaCuenta.setText("Crear nueva cuenta");
        btnNuevaCuenta.setBorder(null);
        btnNuevaCuenta.setBorderPainted(false);
        btnNuevaCuenta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNuevaCuentaActionPerformed(evt);
            }
        });
        bg.add(btnNuevaCuenta, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 360, 180, -1));

        btnTransferencia.setBackground(new java.awt.Color(255, 223, 148));
        btnTransferencia.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnTransferencia.setForeground(new java.awt.Color(100, 100, 100));
        btnTransferencia.setText("Realizar Transferencia");
        btnTransferencia.setBorder(null);
        btnTransferencia.setBorderPainted(false);
        btnTransferencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTransferenciaActionPerformed(evt);
            }
        });
        bg.add(btnTransferencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 360, 180, -1));

        tblCuentas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblCuentas);

        bg.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 70, 600, 280));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bg, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    private void btnTransferenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTransferenciaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_btnTransferenciaActionPerformed

    private void btnNuevaCuentaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNuevaCuentaActionPerformed
        String cadenaConexion = "jdbc:mysql://localhost/banco";
        String usuario = "root";
        String password = "123456789";
        IConexion conexion = new Conexion(cadenaConexion, usuario, password);
        ICuentasDAO cuentasDAO = new CuentasDAO(conexion);
        DlgCrearCuenta crearCuenta = new DlgCrearCuenta(this, rootPaneCheckingEnabled, cuentasDAO, cliente);
        crearCuenta.setVisible(true);
        mostrarCuentas();
    }//GEN-LAST:event_btnNuevaCuentaActionPerformed

    public void mostrarCuentas(){
        String cadenaConexion = "jdbc:mysql://localhost/banco";
        String usuario = "root";
        String password = "123456789";
        IConexion conexion = new Conexion(cadenaConexion, usuario, password);
        ICuentasDAO cuentasDAO = new CuentasDAO(conexion);
        try {
            List<Cuenta> listaCuentas = cuentasDAO.consultarCuentas(cliente);
            DefaultTableModel modelo = new DefaultTableModel();
            modelo.addColumn("Numero de Cuenta");
            modelo.addColumn("Saldo");
            modelo.addColumn("Desactivar");
            modelo.addColumn("Transferir");
            modelo.addColumn("Retiro sin cuenta");
            for (Cuenta cuenta : listaCuentas) {
                Object[] fila = {cuenta.getCodigo(),cuenta.getSaldo(), "", "Transferir", "Retiro"};
                modelo.addRow(fila);
            }
            tblCuentas.setModel(modelo);
            TableColumnModel columnModel = tblCuentas.getColumnModel();
            
            ButtonColumn estadoButtonColumn = new ButtonColumn("Desactivar", new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    System.out.println("Aqui va la logica del boton de estado");
//                    // Lógica para el botón "Eliminar"
//                    int row = tblSocios.convertRowIndexToModel(tblSocios.getEditingRow());
//                    // Acciones para eliminar el socio en la fila 'row'
//                    // ...
//                    Socio socio;
//                    try {
//                        socio = obtenerSocioDesdeFila(row);
//                        sociosDAO.eliminar(socio.getId());
//                    } catch (PersistenciaException ex) {
//                        Logger.getLogger(SociosForm.class.getName()).log(Level.SEVERE, null, ex);
//                    }
                }
            });
            
            ButtonColumn transferenciaButtonColumn = new ButtonColumn("Transferir", new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    int row = tblCuentas.convertRowIndexToModel(tblCuentas.getEditingRow());
                    Cuenta cuenta;
                    try {
                        cuenta = obtenerCuentaDesdeFila(row);
                        TransferenciaForm transferencia = new TransferenciaForm(clientesDAO, cuenta);
                        transferencia.setVisible(true);
                    } catch (PersistenciaException ex) {
                        Logger.getLogger(MenuClienteForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });

            ButtonColumn retiroButtonColumn = new ButtonColumn("Retiro", new ActionListener() {
                @Override
                public void actionPerformed(ActionEvent e) {
                    int row = tblCuentas.convertRowIndexToModel(tblCuentas.getEditingRow());
                    Cuenta cuenta;
                    try {
                        cuenta = obtenerCuentaDesdeFila(row);
                        RetiroForm retiro = new RetiroForm(clientesDAO, cuenta);
                        retiro.setVisible(true);
                    } catch (PersistenciaException ex) {
                        Logger.getLogger(MenuClienteForm.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            });
            
            columnModel.getColumn(2).setCellRenderer(estadoButtonColumn);
            columnModel.getColumn(2).setCellEditor(estadoButtonColumn);

            columnModel.getColumn(3).setCellRenderer(transferenciaButtonColumn);
            columnModel.getColumn(3).setCellEditor(transferenciaButtonColumn);
            
            columnModel.getColumn(4).setCellRenderer(retiroButtonColumn);
            columnModel.getColumn(4).setCellEditor(retiroButtonColumn);

        } catch (PersistenciaException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error al mostrar la tabla", JOptionPane.ERROR_MESSAGE);
        }
    }

    private Cuenta obtenerCuentaDesdeFila(int fila) throws PersistenciaException {
        String cadenaConexion = "jdbc:mysql://localhost/banco";
        String usuario = "root";
        String password = "123456789";
        IConexion conexion = new Conexion(cadenaConexion, usuario, password);
        ICuentasDAO cuentasDAO = new CuentasDAO(conexion);
        
        List<Cuenta> listaCuentas = cuentasDAO.consultarCuentas(cliente);
        if (fila >= 0 && fila < listaCuentas.size()) {
            return listaCuentas.get(fila);
        } else {
            return null;
        }
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel bg;
    private javax.swing.JButton btnNuevaCuenta;
    private javax.swing.JButton btnSalir;
    private javax.swing.JButton btnTransferencia;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBienvenida;
    private javax.swing.JTable tblCuentas;
    // End of variables declaration//GEN-END:variables
}
